"use strict";const dateConverter=require("./shared/nepali-datetime.BW25MHRn.cjs"),LOCALE_EN="en",LOCALE_NE="ne",UTC_OFFSET_IN_MS=207e5,OLD_UTC_OFFSET_IN_MS=198e5,TIMEZONE_TRANSITION_TIMESTAMP=5049018e5,TIMEZONE_TRANSITION_DATE_REFERENCE=new Date(1986,0,1,0,15),NEPALI_MONTHS_EN=["Baisakh","Jestha","Asar","Shrawan","Bhadra","Aswin","Kartik","Mangsir","Poush","Magh","Falgun","Chaitra"],NEPALI_MONTHS_SHORT_EN=["Bai","Jes","Asa","Shr","Bhd","Asw","Kar","Man","Pou","Mag","Fal","Cha"],NEPALI_MONTHS_NE=["\u092C\u0948\u0936\u093E\u0916","\u091C\u0947\u0920","\u0905\u0938\u093E\u0930","\u0936\u094D\u0930\u093E\u0935\u0923","\u092D\u093E\u0926\u094D\u0930","\u0906\u0936\u094D\u0935\u093F\u0928","\u0915\u093E\u0930\u094D\u0924\u093F\u0915","\u092E\u0902\u0938\u093F\u0930","\u092A\u094C\u0937","\u092E\u093E\u0918","\u092B\u093E\u0932\u094D\u0917\u0941\u0923","\u091A\u0948\u0924\u094D\u0930"],NEPALI_MONTHS_SHORT_NE=["\u092C\u0948","\u091C\u0947","\u0905","\u0936\u094D\u0930\u093E","\u092D\u093E","\u0906","\u0915\u093E","\u092E\u0902","\u092A\u094C","\u092E\u093E","\u092B\u093E","\u091A\u0948"],ENGLISH_MONTHS_EN=["January","February","March","April","May","June","July","August","September","October","November","December"],ENGLISH_MONTHS_SHORT_EN=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],ENGLISH_MONTHS_NE=["\u091C\u0928\u0935\u0930\u0940","\u092B\u0947\u092C\u094D\u0930\u0941\u0905\u0930\u0940","\u092E\u093E\u0930\u094D\u091A","\u0905\u092A\u094D\u0930\u093F\u0932","\u092E\u0947","\u091C\u0941\u0928","\u091C\u0941\u0932\u093E\u0908","\u0905\u0917\u0938\u094D\u091F","\u0938\u0947\u092A\u094D\u091F\u0947\u092E\u094D\u092C\u0930","\u0905\u0915\u094D\u091F\u094B\u092C\u0930","\u0928\u094B\u092D\u0947\u092E\u094D\u092C\u0930","\u0921\u093F\u0938\u0947\u092E\u094D\u092C\u0930"],ENGLISH_MONTHS_SHORT_NE=["\u091C\u0928","\u092B\u0947\u092C","\u092E\u093E\u0930","\u0905\u092A\u094D\u0930\u093F","\u092E\u0947","\u091C\u0941\u0928","\u091C\u0941\u0932\u093E","\u0905\u0917","\u0938\u0947\u092A","\u0905\u0915\u094D\u091F\u094B","\u0928\u094B\u092D\u0947","\u0921\u093F\u0938\u0947"],NUM_NE=["\u0966","\u0967","\u0968","\u0969","\u096A","\u096B","\u096C","\u096D","\u096E","\u096F"],WEEKDAYS_SHORT_EN=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],WEEKDAYS_LONG_EN=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],WEEKDAYS_SHORT_NE=["\u0906\u0907\u0924","\u0938\u094B\u092E","\u092E\u0902\u0917\u0932","\u092C\u0941\u0927","\u092C\u093F\u0939\u093F","\u0936\u0941\u0915\u094D\u0930","\u0936\u0928\u093F"],WEEKDAYS_LONG_NE=["\u0906\u0907\u0924\u092C\u093E\u0930","\u0938\u094B\u092E\u092C\u093E\u0930","\u092E\u0902\u0917\u0932\u092C\u093E\u0930","\u092C\u0941\u0927\u092C\u093E\u0930","\u092C\u093F\u0939\u093F\u092C\u093E\u0930","\u0936\u0941\u0915\u094D\u0930\u092C\u093E\u0930","\u0936\u0928\u093F\u092C\u093E\u0930"],FORMAT_TOKEN_REGEX=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DD?|ddd?d?|do?|YYYY|YY|y{2,4}|yo?|a|A|hh?|HH?|mm?|ss?|SSS|x|X|.)/g,getNepalDateAndTime=t=>{const e=t.getTime(),s=e<TIMEZONE_TRANSITION_TIMESTAMP?OLD_UTC_OFFSET_IN_MS:UTC_OFFSET_IN_MS,u=new Date(e+s),n=u.getUTCFullYear(),i=u.getUTCMonth(),m=u.getUTCDate(),h=u.getUTCHours(),d=u.getUTCMinutes(),g=u.getUTCSeconds(),D=u.getUTCMilliseconds(),S=u.getUTCDay();return{year:n,month0:i,day:m,hour:h,minute:d,second:g,ms:D,weekDay:S}},getDate=(t,e,s,u,n,i,m)=>{const h=new Date(t,e,s,u,n,i,m);let d=h<TIMEZONE_TRANSITION_DATE_REFERENCE?OLD_UTC_OFFSET_IN_MS:UTC_OFFSET_IN_MS;const g=-1*h.getTimezoneOffset()*60*1e3;return new Date(h.getTime()-d+g)},parseFormatTokens=t=>{const e=t.match(FORMAT_TOKEN_REGEX);return e?e.map(s=>s.startsWith("[")&&s.endsWith("]")?s.slice(1,-1):s):[]},seqToRE=t=>{if(t.length===0)return new RegExp("");let e=[...t];if(e=e.sort((u,n)=>n.length-u.length),e[0]==="")return new RegExp("");const s=`(${e.join("|")})`;return new RegExp(s)},zeroPad=t=>t.toString().padStart(2,"0"),millisecondZeroPad=t=>t.toString().padStart(3,"0"),F=t=>t.split("").map(e=>NUM_NE[e.charCodeAt(0)-48]).join(""),r=(t,e)=>{const s=typeof t=="string"?t:String(t);return e!==LOCALE_NE?s:F(s)},halfNepaliYear=(t,e)=>r(t.getYear(),e).substring(2),fullNepaliYear=(t,e)=>r(t.getYear(),e),halfEnglishYear=(t,e)=>r(t.getEnglishYear(),e).substring(2),fullEnglishYear=(t,e)=>r(t.getEnglishYear(),e),nepaliMonthNumber=(t,e)=>r(t.getMonth()+1,e),nepaliMonthTwoDigit=(t,e)=>r(zeroPad(t.getMonth()+1),e),nepaliMonthAbbrName=(t,e)=>e===LOCALE_NE?NEPALI_MONTHS_SHORT_NE[t.getMonth()]:NEPALI_MONTHS_SHORT_EN[t.getMonth()],nepaliMonthFullName=(t,e)=>e===LOCALE_NE?NEPALI_MONTHS_NE[t.getMonth()]:NEPALI_MONTHS_EN[t.getMonth()],englishMonthNumber=(t,e)=>r(t.getEnglishMonth()+1,e),englishMonthTwoDigit=(t,e)=>r(zeroPad(t.getEnglishMonth()+1),e),englishMonthAbbrName=(t,e)=>e===LOCALE_NE?ENGLISH_MONTHS_SHORT_NE[t.getEnglishMonth()]:ENGLISH_MONTHS_SHORT_EN[t.getEnglishMonth()],englishMonthFullName=(t,e)=>e===LOCALE_NE?ENGLISH_MONTHS_NE[t.getEnglishMonth()]:ENGLISH_MONTHS_EN[t.getEnglishMonth()],nepaliDayNumber=(t,e)=>r(t.getDate(),e),nepaliDayTwoDigit=(t,e)=>r(zeroPad(t.getDate()),e),englishDayNumber=(t,e)=>r(t.getEnglishDate(),e),englishDayTwoDigit=(t,e)=>r(zeroPad(t.getEnglishDate()),e),weekDayNumber=(t,e)=>r(t.getDay(),e),weekDayShortName=(t,e)=>e===LOCALE_NE?WEEKDAYS_SHORT_NE[t.getDay()]:WEEKDAYS_SHORT_EN[t.getDay()],weekDayFullName=(t,e)=>e===LOCALE_NE?WEEKDAYS_LONG_NE[t.getDay()]:WEEKDAYS_LONG_EN[t.getDay()],hour24Number=(t,e)=>r(t.getHours(),e),hour24TwoDigit=(t,e)=>r(zeroPad(t.getHours()),e),hour12Number=(t,e)=>{const s=t.getHours(),u=s>12?s-12:s;return r(u,e)},hour12TwoDigit=(t,e)=>{const s=t.getHours(),u=s>12?s-12:s;return r(zeroPad(u),e)},minuteNumber=(t,e)=>r(t.getMinutes(),e),minuteTwoDigit=(t,e)=>r(zeroPad(t.getMinutes()),e),secondNumber=(t,e)=>r(t.getSeconds(),e),secondTwoDigit=(t,e)=>r(zeroPad(t.getSeconds()),e),millisecondThreeDigit=(t,e)=>r(millisecondZeroPad(t.getMilliseconds()),e),amPmUpperCase=(t,e)=>e===LOCALE_NE?t.getHours()>=12?"\u092A\u093F\u092E":"\u090F\u092E":t.getHours()>=12?"PM":"AM",amPmLowerCase=(t,e)=>e===LOCALE_NE?t.getHours()>=12?"\u092A\u093F\u092E":"\u090F\u092E":t.getHours()>=12?"pm":"am",l$1={YY:halfNepaliYear,YYYY:fullNepaliYear,M:nepaliMonthNumber,MM:nepaliMonthTwoDigit,MMM:nepaliMonthAbbrName,MMMM:nepaliMonthFullName,D:nepaliDayNumber,DD:nepaliDayTwoDigit,d:weekDayNumber,dd:weekDayShortName,ddd:weekDayShortName,dddd:weekDayFullName,H:hour24Number,HH:hour24TwoDigit,h:hour12Number,hh:hour12TwoDigit,m:minuteNumber,mm:minuteTwoDigit,s:secondNumber,ss:secondTwoDigit,SSS:millisecondThreeDigit,A:amPmUpperCase,a:amPmLowerCase},c=(t,e,s)=>{const u=parseFormatTokens(e),n=i=>i in l$1?l$1[i](t,s):i;return u.map(n).join("")},format=(t,e)=>c(t,e,LOCALE_EN),formatNepali=(t,e)=>c(t,e,LOCALE_NE),nepaliDateToString=t=>{const e=zeroPad(t.getYear()),s=zeroPad(t.getMonth()+1),u=zeroPad(t.getDate()),n=zeroPad(t.getHours()),i=zeroPad(t.getMinutes()),m=zeroPad(t.getSeconds()),h=t.getMilliseconds(),d=h===0?"":`.${millisecondZeroPad(h)}`;return`${e}-${s}-${u} ${n}:${i}:${m}${d}`},o={YY:halfEnglishYear,YYYY:fullEnglishYear,M:englishMonthNumber,MM:englishMonthTwoDigit,MMM:englishMonthAbbrName,MMMM:englishMonthFullName,D:englishDayNumber,DD:englishDayTwoDigit,d:weekDayNumber,dd:weekDayShortName,ddd:weekDayShortName,dddd:weekDayFullName,H:hour24Number,HH:hour24TwoDigit,h:hour12Number,hh:hour12TwoDigit,m:minuteNumber,mm:minuteTwoDigit,s:secondNumber,ss:secondTwoDigit,SSS:millisecondThreeDigit,A:amPmUpperCase,a:amPmLowerCase},a$1=(t,e,s)=>{const u=parseFormatTokens(e),n=i=>i in o?o[i](t,s):i;return u.map(n).join("")},formatEnglishDate=(t,e)=>a$1(t,e,LOCALE_EN),formatEnglishDateInNepali=(t,e)=>a$1(t,e,LOCALE_NE);function l(t){const e=t.split(/[-./]/,3),[s,u=1,n=1]=e.map(i=>{const m=parseInt(i,10);if(Number.isNaN(m))throw new Error("Invalid date");return m});return[s,u-1,n]}function x(t){if(!t)return[0,0,0,0];const[e,s="0"]=t.split(".",2),u=e.split(":",3),[n,i=0,m=0]=u.map(d=>{const g=parseInt(d,10);if(Number.isNaN(g))throw new Error("Invalid time");return g});let h=parseInt(s,10);return Number.isNaN(h)&&(h=0),[n,i,m,h]}function parse(t){const[e,s]=t.split(" ",2),[u,n,i]=l(e),[m,h,d,g]=x(s);return[u,n,i,m,h,d,g]}const k={YY:/(\d\d)/,YYYY:/(\d\d\d\d)/,M:/(1[0-2]|0[1-9]|[1-9])/,MM:/(1[0-2]|0[1-9]|[1-9])/,D:/(3[0-2]|[1-2]\d|0[1-9]|[1-9]| [1-9])/,DD:/(3[0-2]|[1-2]\d|0[1-9]|[1-9]| [1-9])/,H:/(2[0-3]|[0-1]\d|\d)/,HH:/(2[0-3]|[0-1]\d|\d)/,hh:/(1[0-2]|0[1-9]|[1-9])/,mm:/([0-5]\d|\d)/,ss:/([0-5]\d|\d)/,SSS:/(\d\d\d)/,A:/(AM|PM)/,a:/(am|pm)/,MMMM:seqToRE(NEPALI_MONTHS_EN),MMM:seqToRE(NEPALI_MONTHS_SHORT_EN),dddd:seqToRE(WEEKDAYS_LONG_EN),ddd:seqToRE(WEEKDAYS_SHORT_EN),dd:seqToRE(WEEKDAYS_SHORT_EN),d:/([0-6])/};function Y(t){const e=[],s=[];for(const n of t)n in k?(e.push(n),s.push(k[n].source)):s.push(n.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"));const u=s.join("");return{dateTokens:e,regex:new RegExp(`^${u}$`)}}function T(t,e){let[s,u,n,i,m,h,d,g]=[0,1,1,0,0,0,0,0],D=!1,S=!1;for(let M=0;M<t.length;M++){const N=t[M],E=parseInt(e[M+1]);switch(N){case"YYYY":s=E;break;case"YY":s=2e3+parseInt(e[M]);break;case"MM":case"M":u=E;break;case"MMMM":u=NEPALI_MONTHS_EN.indexOf(e[M+1])+1;break;case"MMM":u=NEPALI_MONTHS_SHORT_EN.indexOf(e[M+1])+1;break;case"DD":case"D":n=E;break;case"HH":case"H":i=E;break;case"hh":case"h":m=E,S=!0;break;case"mm":case"m":h=E;break;case"ss":case"s":d=E;break;case"SSS":g=E;break;case"A":case"a":D=e[M+1].toLowerCase()==="pm"}}return S&&(i=m+(D?12:0)),{year:s,month0:u-1,day:n,hour:i,minute:h,second:d,ms:g}}function parseFormat(t,e){const s=parseFormatTokens(e),{dateTokens:u,regex:n}=Y(s),i=RegExp(n).exec(t);if(!i)throw new Error("Invalid date format");const{year:m,month0:h,day:d,hour:g,minute:D,second:S,ms:M}=T(u,i);return[m,h,d,g,D,S,M]}const p={YY:/(\d\d)/,YYYY:/(\d\d\d\d)/,M:/(1[0-2]|0[1-9]|[1-9])/,MM:/(1[0-2]|0[1-9]|[1-9])/,D:/(3[0-2]|[1-2]\d|0[1-9]|[1-9]| [1-9])/,DD:/(3[0-2]|[1-2]\d|0[1-9]|[1-9]| [1-9])/,H:/(2[0-3]|[0-1]\d|\d)/,HH:/(2[0-3]|[0-1]\d|\d)/,hh:/(1[0-2]|0[1-9]|[1-9])/,mm:/([0-5]\d|\d)/,ss:/([0-5]\d|\d)/,SSS:/(\d\d\d)/,A:/(AM|PM)/,a:/(am|pm)/,MMMM:seqToRE(ENGLISH_MONTHS_EN),MMM:seqToRE(ENGLISH_MONTHS_SHORT_EN),dddd:seqToRE(WEEKDAYS_LONG_EN),ddd:seqToRE(WEEKDAYS_SHORT_EN),dd:seqToRE(WEEKDAYS_SHORT_EN),d:/([0-6])/};function b(t){const e=[],s=[];for(const n of t)n in p?(e.push(n),s.push(p[n].source)):s.push(n.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"));const u=s.join("");return{dateTokens:e,regex:new RegExp(`^${u}$`)}}function H(t,e){let[s,u,n,i,m,h,d,g]=[0,1,1,0,0,0,0,0],D=!1,S=!1;for(let M=0;M<t.length;M++){const N=t[M],E=parseInt(e[M+1]);switch(N){case"YYYY":s=E;break;case"YY":s=2e3+parseInt(e[M]);break;case"MM":case"M":u=E;break;case"MMMM":u=ENGLISH_MONTHS_EN.indexOf(e[M+1])+1;break;case"MMM":u=ENGLISH_MONTHS_SHORT_EN.indexOf(e[M+1])+1;break;case"DD":case"D":n=E;break;case"HH":case"H":i=E;break;case"hh":case"h":m=E,S=!0;break;case"mm":case"m":h=E;break;case"ss":case"s":d=E;break;case"SSS":g=E;break;case"A":case"a":D=e[M+1].toLowerCase()==="pm"}}return S&&(i=m+(D?12:0)),{year:s,month0:u-1,day:n,hour:i,minute:h,second:d,ms:g}}function parseEnglishDateFormat(t,e){const s=parseFormatTokens(e),{dateTokens:u,regex:n}=b(s),i=RegExp(n).exec(t);if(!i)throw new Error("Invalid date format");const{year:m,month0:h,day:d,hour:g,minute:D,second:S,ms:M}=H(u,i);return[m,h,d,g,D,S,M]}class ValidationError extends Error{constructor(e){super(e),this.name="ValidationError"}}const validateHour=t=>{if(t<0||t>23)throw new ValidationError("Hour should be in the range 0-23")},validateMinute=t=>{if(t<0||t>59)throw new ValidationError("Minute should be in the range 0-59")},validateSecond=t=>{if(t<0||t>59)throw new ValidationError("Second should be in the range 0-59")},validateMillisecond=t=>{if(t<0||t>999)throw new ValidationError("Millisecond should be in the range 0-999")},validateTime=(t,e,s,u)=>{validateHour(t),validateMinute(e),validateSecond(s),validateMillisecond(u)};class a{timestamp;year;yearEn;month;monthEn;day;dayEn;hour;minute;weekDay;constructor(...e){if(e.length===0)this.initFromCurrentDate();else if(e.length===1&&e[0]instanceof Date)this.initFromEnglishDate(e[0]);else if(e.length===1&&e[0]instanceof a)this.initFromNepaliDate(e[0]);else if(e.length===1&&typeof e[0]=="string")this.parseFromString(e[0]);else if(e.length===1&&typeof e[0]=="number")this.initFromTimestamp(e[0]);else if(e.length===2&&typeof e[0]=="string"&&typeof e[1]=="string")this.parseFromStringWithFormat(e[0],e[1]);else if(e.length>=2&&e.length<=8&&e.every(s=>typeof s=="number"))this.initFromComponents(e);else throw new Error("Invalid date argument")}initFromCurrentDate(){this._setDateObject(new Date)}initFromEnglishDate(e){this._setDateObject(e)}initFromNepaliDate(e){this.set(e.year,e.month,e.day,e.hour,e.minute,e.getSeconds(),e.getMilliseconds())}parseFromString(e){const s=parse(e);this.set(s[0],s[1],s[2],s[3],s[4],s[5],s[6])}initFromTimestamp(e){this._setDateObject(new Date(e))}parseFromStringWithFormat(e,s){const u=parseFormat(e,s);this.set(u[0],u[1],u[2],u[3],u[4],u[5],u[6])}initFromComponents(e){this.set(e[0],e[1],e[2]??1,e[3]??0,e[4]??0,e[5]??0,e[6]??0)}_setDateObject(e,s=!0){this.timestamp=e;const{year:u,month0:n,day:i,hour:m,minute:h,weekDay:d}=getNepalDateAndTime(e);if(this.yearEn=u,this.monthEn=n,this.dayEn=i,this.hour=m,this.minute=h,this.weekDay=d,s){const[g,D,S]=dateConverter.e.englishToNepali(u,n,i);this.year=g,this.month=D,this.day=S}}getDateObject(){return this.timestamp}getYear(){return this.year}getEnglishYear(){return this.yearEn}getMonth(){return this.month}getEnglishMonth(){return this.monthEn}getDate(){return this.day}getEnglishDate(){return this.dayEn}getDay(){return this.weekDay}getHours(){return this.hour}getMinutes(){return this.minute}getSeconds(){return this.timestamp.getSeconds()}getMilliseconds(){return this.timestamp.getMilliseconds()}getTime(){return this.timestamp.getTime()}setYear(e){this.set(e,this.month,this.day,this.hour,this.minute,this.timestamp.getSeconds(),this.timestamp.getMilliseconds())}setMonth(e){this.set(this.year,e,this.day,this.hour,this.minute,this.timestamp.getSeconds(),this.timestamp.getMilliseconds())}setDate(e){this.set(this.year,this.month,e,this.hour,this.minute,this.timestamp.getSeconds(),this.timestamp.getMilliseconds())}setHours(e){this.set(this.year,this.month,this.day,e,this.minute,this.timestamp.getSeconds(),this.timestamp.getMilliseconds())}setMinutes(e){this.set(this.year,this.month,this.day,this.hour,e,this.timestamp.getSeconds(),this.timestamp.getMilliseconds())}setSeconds(e){this.set(this.year,this.month,this.day,this.hour,this.minute,e,this.timestamp.getMilliseconds())}setMilliseconds(e){this.set(this.year,this.month,this.day,this.hour,this.minute,this.timestamp.getSeconds(),e)}setTime(e){this._setDateObject(new Date(e))}set(e,s,u,n,i,m,h){validateTime(n,i,m,h);const[d,g,D]=dateConverter.e.nepaliToEnglish(e,s,u);this.year=e,this.month=s,this.day=u,this._setDateObject(getDate(d,g,D,n,i,m,h),!1)}setDateObject(e){this._setDateObject(e,!0)}format(e){return format(this,e)}formatNepali(e){return formatNepali(this,e)}toString(){return nepaliDateToString(this)}formatEnglishDate(e){return formatEnglishDate(this,e)}formatEnglishDateInNepali(e){return formatEnglishDateInNepali(this,e)}static fromEnglishDate(e,s,u,n=0,i=0,m=0,h=0){const d=getDate(e,s,u,n,i,m,h);return new a(d)}static parseEnglishDate(e,s){const[u,n,i,m,h,d,g]=parseEnglishDateFormat(e,s);return a.fromEnglishDate(u,n,i,m,h,d,g)}static getDaysOfMonth(e,s){if(e<dateConverter.e.npMinYear()||e>dateConverter.e.npMaxYear())throw new Error("Year out of range");if(s<0||s>11)throw new Error("Month out of range");return dateConverter.NP_MONTHS_DATA[e-dateConverter.e.npMinYear()][0][s]}static minSupportedDate(){return a.fromEnglishDate(dateConverter.e.enMinYear(),0,1).getDateObject()}static maxSupportedDate(){return a.fromEnglishDate(dateConverter.e.enMaxYear(),11,31).getDateObject()}static minSupportedNepaliDate(){return new a(dateConverter.e.npMinYear(),0,1)}static maxSupportedNepaliDate(){const e=dateConverter.e.npMaxYear();return new a(e,11,this.getDaysOfMonth(e,11))}static minimum(){return console.warn("`NepaliDate.minimum()` is deprecated and will be removed in a future version. Please use `NepaliDate.minSupportedDate()` instead."),this.minSupportedDate()}static maximum(){return console.warn("`NepaliDate.maximum()` is deprecated and will be removed in a future version. Please use `NepaliDate.maxSupportedDate()` instead."),this.maxSupportedDate()}}module.exports=a;
